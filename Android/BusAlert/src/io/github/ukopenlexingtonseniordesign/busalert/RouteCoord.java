package io.github.ukopenlexingtonseniordesign.busalert;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;

public class RouteCoord {
	private ArrayList<String> routeStrings = new ArrayList<String>();
	
	/*
	 * Not sure why each KML has two coordinate sections. I copied them into the same string. Each group of coordinates contains 3 items: 
	 * latitude, longitude, altitude. I put the name of the route as the beginning of each string and then a '~'.
	 */
	
	//Parse the strings and put them into a HashMap with the key as the name of the route and an ArrayList of ArrayLists as the lists of coordinates
	public HashMap<String, ArrayList<ArrayList<String>>> buildHashMap() {
		HashMap<String, ArrayList<ArrayList<String>>> routeCoordMap = new HashMap<String, ArrayList<ArrayList<String>>>();
		routeStrings.add("Woodhill~-84.496483,38.043835,0;-84.49633,38.04394,0;-84.49408,38.04193,0;-84.49417,38.04182,0;-84.49516,38.04106,0;-84.495193,38.041077,0;-84.49516,38.04105,0;-84.49691,38.03983,0;-84.496933,38.039852,0;-84.49691,38.03983,0;-84.49979,38.03783,0;-84.49907,38.03719,0;-84.49913,38.037148,0;-84.49907,38.03719,0;-84.49612,38.03456,0;-84.496132,38.034554,0;-84.49612,38.03456,0;-84.49464,38.03325,0;-84.494629,38.033253,0;-84.49464,38.03325,0;-84.49141,38.03037,0;-84.49144,38.030346,0;-84.49141,38.03037,0;-84.49045,38.02951,0;-84.49024,38.02937,0;-84.49003,38.02933,0;-84.48938,38.02933,0;-84.48883,38.02918,0;-84.488838,38.029163,0;-84.48883,38.02918,0;-84.48836,38.02892,0;-84.48729,38.02817,0;-84.48574,38.02746,0;-84.485764,38.027431,0;-84.48574,38.02746,0;-84.48514,38.02719,0;-84.48252,38.02567,0;-84.482552,38.025627,0;-84.48252,38.02567,0;-84.48059,38.0245,0;-84.47943,38.02368,0;-84.479469,38.023647,0;-84.47943,38.02368,0;-84.47797,38.02264,0;-84.47684,38.02195,0;-84.476868,38.021919,0;-84.47684,38.02195,0;-84.47574,38.0213,0;-84.4734,38.01963,0;-84.473434,38.019588,0;-84.4734,38.01963,0;-84.47088,38.01788,0;-84.47094,38.017807,0;-84.47088,38.01788,0;-84.47046,38.01772,0;-84.46926,38.0174,0;-84.46853,38.01726,0;-84.46807,38.01731,0;-84.46787,38.01738,0;-84.46756,38.01757,0;-84.467514,38.017517,0;-84.46756,38.01757,0;-84.46722,38.0178,0;-84.46683,38.01794,0;-84.46637,38.01798,0;-84.46557,38.01798,0;-84.46514,38.01812,0;-84.465118,38.018093,0;-84.46514,38.01812,0;-84.46491,38.01821,0;-84.46345,38.01696,0;-84.463493,38.016933,0;-84.46345,38.01696,0;-84.46038,38.01428,0;-84.460411,38.014256,0;-84.46038,38.01428,0;-84.45779,38.01197,0;-84.45752,38.01214,0;-84.45744,38.01229,0;-84.45747,38.01373,0;-84.45743,38.01464,0;-84.45688,38.01645,0;-84.4569,38.0165,0;-84.45644,38.01774,0;-84.45348,38.01706,0;-84.45311,38.01808,0;-84.453033,38.018063,0;-84.45311,38.01808,0;-84.45173,38.02183,0;-84.451637,38.021809,0;-84.45172,38.02183,0;-84.45348,38.01706,0;-84.45353,38.01707,0;-84.453537,38.017059,0;-84.45353,38.01707,0;-84.45083,38.01643,0;-84.4505,38.0163,0;-84.45001,38.01603,0;-84.450035,38.015995,0;-84.45001,38.01603,0;-84.44727,38.01428,0;-84.447289,38.014259,0;-84.44727,38.01428,0;-84.44662,38.01388,0;-84.4457,38.01351,0;-84.44526,38.01327,0;-84.4449,38.01296,0;-84.44322,38.01126,0;-84.443291,38.011219,0;-84.44319,38.01123,0;-84.44306,38.01108,0;-84.44298,38.01081,0;-84.44317,38.00983,0;-84.4421,38.00973,0;-84.442101,38.009701,0;-84.4421,38.00973,0;-84.4369,38.0094,0;-84.436897,38.009411,0;-84.4369,38.0094,0;-84.43662,38.00939,0;-84.43682,38.01005,0;-84.43722,38.01107,0;-84.43759,38.0117,0;-84.43788,38.01209,0;-84.43868,38.01292,0;-84.4505,38.0215,0;-84.45101,38.02178,0;-84.45149,38.02194,0;-84.45165,38.02198,0;-84.45172,38.02183,0;-84.451637,38.021809,0;-84.45172,38.02183,0;-84.45165,38.02198,0;-84.45149,38.02194,0;-84.45101,38.02178,0;-84.4505,38.0215,0;-84.44771,38.01948,0;-84.447754,38.019444,0;-84.44771,38.01948,0;-84.44297,38.01606,0;-84.443008,38.016029,0;-84.44297,38.01606,0;-84.43868,38.01292,0;-84.43825,38.01251,0;-84.43774,38.01191,0;-84.43733,38.01127,0;-84.43706,38.01069,0;-84.437103,38.010677,0;-84.43706,38.01069,0;-84.43659,38.0093,0;-84.43628,38.00795,0;-84.436378,38.007942,0;-84.43637,38.00794,0;-84.43628,38.00795,0;-84.43604,38.00656,0;-84.43191,38.00706,0;-84.4319,38.007,0;-84.43191,38.00706,0;-84.43121,38.00714,0;-84.43118,38.00677,0;-84.43123,38.0065,0;-84.43164,38.00591,0;-84.43336,38.00381,0;-84.43341,38.00383,0;-84.43336,38.00381,0;-84.43345,38.0037,0;-84.43197,38.00288,0;-84.4305,38.00456,0;-84.43038,38.0045,0;-84.430389,38.004505,0;-84.4305,38.00456,0;-84.43029,38.00472,0;-84.42998,38.00483,0;-84.42966,38.00485,0;-84.4294,38.00479,0;-84.429428,38.004749,0;-84.42942,38.00474,0;-84.4294,38.00479,0;-84.42916,38.0047,0;-84.42904,38.00459,0;-84.42851,38.00383,0;-84.42925,38.0035,0;-84.42952,38.00326,0;-84.42961,38.0033,0;-84.42952,38.00326,0;-84.42965,38.00302,0;-84.42982,38.00283,0;-84.4309,38.00214,0;-84.43129,38.00247,0;-84.43197,38.00288,0;-84.43484,38.00447,0;-84.43534,38.00489,0;-84.43567,38.00534,0;-84.43581,38.00562,0;-84.43606,38.00668,0;-84.43701,38.00656,0;-84.43786,38.00635,0;-84.43857,38.00607,0;-84.43907,38.0058,0;-84.43908,38.00581,0;-84.439087,38.005817,0;-84.43907,38.0058,0;-84.44084,38.0046,0;-84.44028,38.00412,0;-84.43935,38.00358,0;-84.43901,38.0033,0;-84.439095,38.003254,0;-84.43901,38.0033,0;-84.43821,38.00239,0;-84.44033,38.00024,0;-84.44115,37.99972,0;-84.44169,37.99916,0;-84.441711,37.999172,0;-84.4319,38.007,0;-84.43191,38.00706,0;-84.43121,38.00714,0;-84.43118,38.00677,0;-84.43123,38.0065,0;-84.43164,38.00591,0;-84.43336,38.00381,0;-84.43341,38.00383,0;-84.43336,38.00381,0;-84.43345,38.0037,0;-84.43155,38.00263,0;-84.43129,38.00247,0;-84.4309,38.00214,0;-84.42982,38.00283,0;-84.42965,38.00302,0;-84.42952,38.00326,0;-84.42961,38.0033,0;-84.429619,38.003307,0;-84.42952,38.00326,0;-84.42925,38.0035,0;-84.42851,38.00383,0;-84.42904,38.00459,0;-84.42916,38.0047,0;-84.4294,38.00479,0;-84.429428,38.004749,0;-84.4294,38.00479,0;-84.42966,38.00485,0;-84.42998,38.00483,0;-84.43029,38.00472,0;-84.4305,38.00456,0;-84.430389,38.004505,0;-84.43038,38.0045,0;-84.4305,38.00456,0;-84.43197,38.00288,0;-84.43484,38.00447,0;-84.43534,38.00489,0;-84.43567,38.00534,0;-84.435677,38.005341,0;-84.43567,38.00534,0;-84.43581,38.00562,0;-84.43604,38.00656,0;-84.43629,38.00798,0;-84.436241,38.00798,0;-84.43629,38.00798,0;-84.43662,38.00939,0;-84.43726,38.00942,0;-84.437256,38.009464,0;-84.43726,38.00942,0;-84.44059,38.00962,0;-84.44059,38.009647,0;-84.44059,38.00962,0;-84.44317,38.00983,0;-84.44298,38.01081,0;-84.44311,38.01115,0;-84.4449,38.01296,0;-84.44526,38.01327,0;-84.4457,38.01351,0;-84.44662,38.01388,0;-84.4473,38.0143,0;-84.44725,38.014347,0;-84.4473,38.0143,0;-84.44808,38.0148,0;-84.448036,38.014839,0;-84.44808,38.0148,0;-84.44983,38.01592,0;-84.449799,38.015953,0;-84.44983,38.01592,0;-84.45032,38.01621,0;-84.45083,38.01643,0;-84.45315,38.01698,0;-84.453125,38.01704,0;-84.453127,38.016993,0;-84.453449,38.017069,0;-84.452323,38.016764,0;-84.451529,38.016595,0;-84.45081,38.016409,0;-84.450295,38.016198,0;-84.449555,38.015725,0;-84.446583,38.013874,0;-84.445778,38.013535,0;-84.445231,38.013231,0;-84.444491,38.012563,0;-84.443868,38.011904,0;-84.44316,38.011211,0;-84.443021,38.010983,0;-84.44301,38.010763,0;-84.443171,38.009833,0;-84.441208,38.009664,0;-84.437099,38.009419,0;-84.436616,38.009444,0;-84.437002,38.010551,0;-84.436966,38.010601,0;-84.43702,38.01059,0;-84.43722,38.01107,0;-84.43759,38.0117,0;-84.43825,38.01251,0;-84.43898,38.01317,0;-84.44069,38.01441,0;-84.440651,38.014439,0;-84.44069,38.01441,0;-84.4424,38.01564,0;-84.442375,38.015667,0;-84.4424,38.01564,0;-84.44409,38.01686,0;-84.444069,38.016869,0;-84.44409,38.01686,0;-84.4505,38.0215,0;-84.45101,38.02178,0;-84.45165,38.02198,0;-84.45199,38.0211,0;-84.452026,38.021103,0;-84.45199,38.0211,0;-84.45226,38.02037,0;-84.452293,38.020374,0;-84.45226,38.02037,0;-84.4534,38.01726,0;-84.453438,38.017269,0;-84.45343,38.01726,0;-84.4534,38.01726,0;-84.45348,38.01706,0;-84.45659,38.01777,0;-84.45704,38.01653,0;-84.45709,38.01653,0;-84.4573,38.01605,0;-84.45856,38.01382,0;-84.45883,38.01346,0;-84.45897,38.01338,0;-84.45915,38.01337,0;-84.46036,38.01442,0;-84.4603,38.01449,0;-84.460304,38.014492,0;-84.46038,38.01444,0;-84.46487,38.01836,0;-84.46512,38.01813,0;-84.46529,38.01805,0;-84.46557,38.01798,0;-84.46673,38.01796,0;-84.46722,38.0178,0;-84.46737,38.01769,0;-84.467545,38.017754,0;-84.46744,38.01765,0;-84.46787,38.01738,0;-84.46841,38.01726,0;-84.46885,38.0173,0;-84.46969,38.01752,0;-84.469681,38.017532,0;-84.46969,38.01752,0;-84.47046,38.01772,0;-84.47098,38.01793,0;-84.47295,38.01931,0;-84.472931,38.019333,0;-84.47295,38.01931,0;-84.47541,38.02107,0;-84.475418,38.021091,0;-84.47543,38.02108,0;-84.47591,38.02141,0;-84.47797,38.02264,0;-84.47903,38.02339,0;-84.479012,38.023407,0;-84.47903,38.02339,0;-84.48059,38.0245,0;-84.48243,38.02562,0;-84.482414,38.025639,0;-84.48243,38.02562,0;-84.48514,38.02719,0;-84.4858,38.02749,0;-84.485794,38.027496,0;-84.4858,38.02749,0;-84.48729,38.02817,0;-84.48871,38.02913,0;-84.48907,38.02927,0;-84.48962,38.02934,0;-84.489624,38.029358,0;-84.48962,38.02934,0;-84.49015,38.02934,0;-84.49032,38.02941,0;-84.49158,38.03053,0;-84.49157,38.030537,0;-84.49158,38.03053,0;-84.49403,38.03271,0;-84.494003,38.032722,0;-84.49403,38.03271,0;-84.49591,38.03437,0;-84.495888,38.034382,0;-84.49588,38.03438,0;-84.49591,38.03437,0;-84.49966,38.03771,0;-84.49963,38.03773,0;-84.499634,38.037731,0;-84.49966,38.03771,0;-84.49979,38.03783,0;-84.49729,38.03957,0;-84.497284,38.039558,0;-84.49729,38.03957,0;-84.49536,38.0409,0;-84.495338,38.040882,0;-84.49537,38.04091,0;-84.49462,38.04146,0;-84.49877,38.04515,0;-84.498,38.04571,0;-84.49773,38.04519,0;-84.49633,38.04394,0;-84.496483,38.043835,0");
	
		for (String s : routeStrings) {
			//Parse the route string
			
			//Parse the name of the route
			int index = 0;
			while (s.charAt(index) != '~') {
				index++;
			}
			//Now index is equal to the index that the '~' resides at
			String routeName = s.substring(0, index);	//Key of the eventual HashMap
			index++;	//increment index past the '~'
			String coordinates = s.substring(index, s.length() - 1);	//String of just coordinates
			
			//Tokenize the coordinates
			String delims = "[;]+";
			String[] tokens = coordinates.split(delims);
			ArrayList<String> coordArray = new ArrayList<String>(Arrays.asList(tokens));	//ArrayList where each element is a string containing the 3 coordinates
			
			ArrayList<ArrayList<String>> routeCoord = new ArrayList<ArrayList<String>>();	//The value of the eventual HashMap
			//Now we need to split each coordinate into a 3 object ArrayList
			for (String coord : coordArray) {
				String coordDelims = "[,]+";
				String[] coordTokens = coord.split(coordDelims);
				ArrayList<String> latLongAlt = new ArrayList<String>(Arrays.asList(coordTokens));
				routeCoord.add(latLongAlt);		//Add the arrayList of 3 identifiers to the list of coordinates				
			}
			
			//Now add this object to our main hashMap.
			routeCoordMap.put(routeName, routeCoord);
		}
	
		return routeCoordMap;
	}
}
